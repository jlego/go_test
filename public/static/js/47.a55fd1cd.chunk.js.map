{"version":3,"sources":["components/slidebarVerify/index.js"],"names":["SlidebarVerify","domEl","bgEl","btnEl","state","success","handleMousedown","e","style","transition","downX","clientX","document","addEventListener","handleMousemove","handleMouseup","distance","offsetWidth","offsetX","left","width","screenX","pageX","console","warn","setState","removeEventListener","this","className","ref","el","color","background","paddingRight","onMouseDown","Component"],"mappings":"yMAIMA,G,mNACJC,MAAQ,K,EACRC,KAAO,K,EACPC,MAAQ,K,EACRC,MAAQ,CACNC,SAAS,G,EAEXC,gBAAkB,SAAAC,GAEhB,EAAKJ,MAAMK,MAAMC,WAAa,IAC9B,EAAKP,KAAKM,MAAMC,WAAa,IAC7B,EAAKC,MAAQH,EAAEI,QACfC,SAASC,iBAAiB,YAAa,EAAKC,iBAAiB,GAC7DF,SAASC,iBAAiB,UAAW,EAAKE,eAAe,I,EAE3DD,gBAAkB,SAAAP,GAEhB,IAAIS,EAAW,EAAKf,MAAMgB,YAAc,EAAKd,MAAMc,YAE/CC,EADQX,EAAEI,QACQ,EAAKD,MAU3B,GARIQ,EAAUF,EACZE,EAAUF,EACDE,EAAU,IACnBA,EAAU,GAGZ,EAAKf,MAAMK,MAAMW,KAAOD,EAAU,KAClC,EAAKhB,KAAKM,MAAMY,MAAQF,EAAU,KAC9BA,IAAYF,EAAU,CAAC,IACjBL,EAAkCJ,EAAlCI,QAAQU,EAA0Bd,EAA1Bc,QAAQC,EAAkBf,EAAlBe,MAAMJ,EAAYX,EAAZW,QAC9BK,QAAQC,KAAKjB,EAAGI,EAAQU,EAAQC,EAAMJ,GAEtC,EAAKO,SAAS,CACZpB,SAAS,IAEXO,SAASc,oBAAoB,YAAa,EAAKpB,iBAAiB,GAChEM,SAASc,oBAAoB,YAAa,EAAKZ,iBAAiB,K,EAGpEC,cAAgB,SAAAR,GAEV,EAAKH,MAAMC,UAGb,EAAKF,MAAMK,MAAMW,KAAO,EACxB,EAAKjB,KAAKM,MAAMY,MAAQ,EAE1BR,SAASc,oBAAoB,YAAa,EAAKZ,iBAAiB,GAChEF,SAASc,oBAAoB,UAAW,EAAKX,eAAe,K,4CAE9D,WAAU,IAAD,OACDV,EAAYsB,KAAKvB,MAAjBC,QACN,OACE,yBAAKuB,UAAU,kBAAkBC,IAAK,SAAAC,GAAE,OAAI,EAAK7B,MAAQ6B,IACvD,yBAAKF,UAAU,KAAKC,IAAK,SAAAC,GAAE,OAAI,EAAK5B,KAAO4B,KAC3C,yBAAKF,UAAU,OAAOpB,MAAO,CAACuB,MAAO1B,GAAW,OAAQ2B,WAAY3B,GAAW,UAAW4B,aAAc5B,GAAW,SAChHA,EAAU,2BAAS,gEAEtB,yBAAKuB,UAAU,MAAMM,YAAaP,KAAKrB,gBAAiBuB,IAAK,SAAAC,GAAE,OAAI,EAAK3B,MAAQ2B,U,GA3D3DK,cAoEdnC","file":"static/js/47.a55fd1cd.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import { Icon } from 'antd';\nimport './style.less';\n\nclass SlidebarVerify extends Component {\n  domEl = null\n  bgEl = null\n  btnEl = null\n  state = {\n    success: false\n  }\n  handleMousedown = e => {\n    // console.warn(e);\n    this.btnEl.style.transition = \" \";\n    this.bgEl.style.transition = \" \";\n    this.downX = e.clientX;\n    document.addEventListener('mousemove', this.handleMousemove, false);\n    document.addEventListener('mouseup', this.handleMouseup, false);\n  }\n  handleMousemove = e => {\n    // console.warn(e);\n    let distance = this.domEl.offsetWidth - this.btnEl.offsetWidth; //滑动成功的宽度（距离）\n    let moveX = e.clientX; // 获取鼠标移动的坐标\n    let offsetX = moveX - this.downX; // 得到鼠标的偏移量\n\n    if (offsetX > distance) {\n      offsetX = distance; // 如果滑过了终点,鼠标就停在终点的位置\n    } else if (offsetX < 0) {\n      offsetX = 0; // 回到起点\n    }\n\n    this.btnEl.style.left = offsetX + \"px\"; // 鼠标滑动的距离;\n    this.bgEl.style.width = offsetX + \"px\";\n    if (offsetX === distance) {\n      const { clientX,screenX,pageX,offsetX } = e\n      console.warn(e, clientX,screenX,pageX,offsetX);\n      //  滑动成功\n      this.setState({\n        success: true\n      })\n      document.removeEventListener('mousedown', this.handleMousedown, false);\n      document.removeEventListener('mousemove', this.handleMousemove, false);\n    }\n  }\n  handleMouseup = e => {\n    // console.warn(e);\n    if (this.state.success) {\n      return;\n    } else {\n      this.btnEl.style.left = 0;\n      this.bgEl.style.width = 0;\n    }\n    document.removeEventListener('mousemove', this.handleMousemove, false);\n    document.removeEventListener('mouseup', this.handleMouseup, false);\n  }\n  render() {\n    let { success } = this.state\n    return (\n      <div className=\"slidebar-verify\" ref={el => this.domEl = el}>\n        <div className=\"bg\" ref={el => this.bgEl = el}></div>\n        <div className=\"text\" style={{color: success && '#fff', background: success && '#44b549', paddingRight: success && '40px'}}>\n          {success ? '验证通过' : '按住滑块，拖到最右边'}\n        </div>\n        <div className=\"btn\" onMouseDown={this.handleMousedown} ref={el => this.btnEl = el}>\n          \n          {/* {success ? <Icon type=\"check-circle\" style={{color: '#44b549'}} /> : <Icon type=\"double-right\" />} */}\n        </div>\n      </div>\n    )\n  }\n};\n\nexport default SlidebarVerify;"],"sourceRoot":""}