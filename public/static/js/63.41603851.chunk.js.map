{"version":3,"sources":["components/tree/index.js"],"names":["DirectoryTree","Tree","loop","data","pId","result","filter","item","forEach","key","_id","title","name","subList","length","children","View","state","treeData","onCheck","checkedKeys","console","log","onChange","props","this","fetchData","params","Apis","api","then","res","setState","list","value","otherProps","style","textAlign","margin","Component"],"mappings":"qOAGQA,EAAkBC,IAAlBD,cAER,SAASE,EAAKC,EAAMC,GAClB,IAAIC,EAASF,EAAKG,QAAO,SAAAC,GAAI,OAAIA,EAAKH,MAAQA,KAO9C,OANAC,EAAOG,SAAQ,SAAAD,GACbA,EAAKE,IAAMF,EAAKG,IAChBH,EAAKI,MAAQJ,EAAKI,OAASJ,EAAKK,KAChC,IAAIC,EAAUX,EAAKC,EAAMI,EAAKG,KAC3BG,EAAQC,SAAQP,EAAKQ,SAAWF,MAE9BR,E,IAGHW,E,4MACJC,MAAQ,CACNC,SAAU,I,EAmBZC,QAAU,SAAAC,GACRC,QAAQC,IAAI,UAAWF,GADA,IAEfG,EAAa,EAAKC,MAAlBD,SACLA,GAAUA,EAASH,I,uDApBxB,WACEK,KAAKC,c,uBAGP,WAAqB,IAAD,OAAVC,EAAU,uDAAH,GACZC,IAAKH,KAAKD,MAAMK,MACjBD,IAAKH,KAAKD,MAAMK,KAAhB,2BACKJ,KAAKD,MAAMG,QAAU,IACrBA,IACFG,MAAK,SAAAC,GACN,EAAKC,SAAS,CACZd,SAAUhB,EAAK6B,EAAI5B,KAAK8B,KAAM,W,oBAYtC,WAAU,IAAD,EACuCR,KAAKD,MAD5C,IACCU,aADD,MACO,GADP,EACwBC,GADxB,EACWZ,SADX,qCAECL,EAAaO,KAAKR,MAAlBC,SACR,OACEO,KAAKR,MAAMC,SAASJ,OACpB,kBAACd,EAAD,aACEmB,QAASM,KAAKN,QACdC,YAAcc,EACdhB,SAAUiB,EAAWjB,UAAYA,GAC7BiB,IACD,yBAAKC,MAAO,CAACC,UAAW,WAAW,kBAAC,IAAD,CAAMD,MAAO,CAACE,OAAQ,oB,GArCjDC,aAyCJvB","file":"static/js/63.41603851.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Apis from '@/apis'\r\nimport { Tree, Spin } from 'antd';\r\nconst { DirectoryTree } = Tree;\r\n\r\nfunction loop(data, pId) {\r\n  let result = data.filter(item => item.pId === pId)\r\n  result.forEach(item => {\r\n    item.key = item._id\r\n    item.title = item.title || item.name\r\n    let subList = loop(data, item._id)\r\n    if(subList.length) item.children = subList\r\n  })\r\n  return result\r\n}\r\n\r\nclass View extends Component {\r\n  state = {\r\n    treeData: [],\r\n  }\r\n  componentDidMount(){\r\n    this.fetchData()\r\n  }\r\n\r\n  fetchData(params={}){\r\n    if(Apis[this.props.api]){\r\n      Apis[this.props.api]({\r\n        ...this.props.params || {},\r\n        ...params\r\n      }).then(res => {\r\n        this.setState({\r\n          treeData: loop(res.data.list, '')\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  onCheck = checkedKeys => {\r\n    console.log('onCheck', checkedKeys);\r\n    const { onChange } = this.props\r\n    if(onChange) onChange(checkedKeys)\r\n  };\r\n\r\n  render() {\r\n    const { value=[], onChange, ...otherProps } = this.props\r\n    const { treeData } = this.state;\r\n    return (\r\n      this.state.treeData.length ? \r\n      <DirectoryTree\r\n        onCheck={this.onCheck}\r\n        checkedKeys={ value }\r\n        treeData={otherProps.treeData || treeData}\r\n        {...otherProps}\r\n      /> : <div style={{textAlign: 'center'}}><Spin style={{margin: '30px auto'}} /></div>\r\n    );\r\n  }\r\n}\r\nexport default View"],"sourceRoot":""}